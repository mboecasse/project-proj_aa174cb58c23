version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: auth-api-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin123
      MONGO_INITDB_DATABASE: auth_api
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    networks:
      - auth-api-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s

  # Node.js API Application
  api:
    build:
      context: ../..
      dockerfile: docs/deployment/Dockerfile
    container_name: auth-api-app
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 3000
      MONGODB_URI: mongodb://admin:admin123@mongodb:27017/auth_api?authSource=admin
      JWT_ACCESS_SECRET: dev_jwt_access_secret_change_in_production_must_be_very_long
      JWT_ACCESS_EXPIRY: 15m
      JWT_REFRESH_SECRET: dev_jwt_refresh_secret_change_in_production_must_be_very_long
      JWT_REFRESH_EXPIRY: 7d
      EMAIL_HOST: mailhog
      EMAIL_PORT: 1025
      EMAIL_USER: test@example.com
      EMAIL_PASSWORD: password
      EMAIL_FROM: noreply@authapi.com
      CLIENT_URL: http://localhost:3000
      RATE_LIMIT_WINDOW_MS: 900000
      RATE_LIMIT_MAX_REQUESTS: 100
      LOG_LEVEL: debug
    ports:
      - "3000:3000"
    volumes:
      - ../../src:/app/src
      - ../../package.json:/app/package.json
      - ../../package-lock.json:/app/package-lock.json
      - /app/node_modules
    depends_on:
      mongodb:
        condition: service_healthy
      mailhog:
        condition: service_started
    networks:
      - auth-api-network
    command: npm run dev

  # MailHog for Email Testing
  mailhog:
    image: mailhog/mailhog:latest
    container_name: auth-api-mailhog
    restart: unless-stopped
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - auth-api-network

  # Mongo Express for Database Management
  mongo-express:
    image: mongo-express:latest
    container_name: auth-api-mongo-express
    restart: unless-stopped
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: admin123
      ME_CONFIG_MONGODB_URL: mongodb://admin:admin123@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin123
    ports:
      - "8081:8081"
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - auth-api-network

networks:
  auth-api-network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local
